//import junit.framework.Test

apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.triplet.play'
apply plugin: 'realm-android'

//TODO uncomment line below after adding fabric api secret and key to fabric.properties
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'
    compileOptions.incremental = false

    defaultConfig {
        applicationId 'com.invited'
        minSdkVersion 16
        targetSdkVersion 26
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 19
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '2.2.5'
        multiDexEnabled true
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'alias'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
//            shrinkResources false
//
//            signingConfig signingConfigs.release
//
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
// ext.betaDistributionReleaseNotesFilePath =
//                    file('../crashlytics_release_notes.txt').absolutePath
            buildConfigField "String", 'APP_ENV', '"PRODUCTION"'
        }

        debug {
//            versionNameSuffix " Debug"
//            debuggable true
            buildConfigField "String", 'APP_ENV', '"DEVELOPMENT"'
        }
    }

//    sourceSets {
//        def commonTestDir = 'src/commonTest/java'
//        test {
//            java.srcDir commonTestDir
//        }
//        androidTest {
//            java.srcDir commonTestDir
//        }
//    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

play {
    serviceAccountEmail = 'your-service-account-email'
    pk12File = file('key.p12')
    // By default publishes to Alpha channel
    track = 'alpha'
}



dependencies {
    final PLAY_SERVICES_VERSION = '11.0.4'
    final SUPPORT_LIBRARY_VERSION = '26.0.0'
    final RETROFIT_VERSION = '2.1.0'
    final DAGGER_VERSION = '2.5'
    final MOCKITO_VERSION = '2.6.2'
    final HAMCREST_VERSION = '1.3'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final BUTTERKNIFE_VERSION = '8.4.0'
    final STETHO_VERSION = '1.5.0'
    final OKHTTP_VERSION = '3.3.0'
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"
    compile project(path: ':fragmentNavigation')
    // App Dependencies
    implementation 'com.android.support:multidex:1.0.3'
    compile 'com.google.android.gms:play-services:11.0.4'
    compile "com.google.firebase:firebase-messaging:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"
    compile "com.google.android.gms:play-services-places:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile('com.squareup.sqlbrite:sqlbrite:1.1.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile 'com.theartofdev.edmodo:android-image-cropper:2.4.+'
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true
    }
    implementation 'com.github.joielechong:countrycodepicker:2.1.8'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    // input validation
    compile 'com.mobsandgeeks:android-saripaar:2.0.0'
    compile 'com.android.volley:volley:1.1.0'
    compile 'com.jakewharton.timber:timber:4.1.2'
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler
    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    androidTestCompile "org.mockito:mockito-android:$MOCKITO_VERSION"
    testCompile 'org.robolectric:robolectric:3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.facebook.android:facebook-android-sdk:4.31.0'
}


// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

apply plugin: 'com.google.gms.google-services'


